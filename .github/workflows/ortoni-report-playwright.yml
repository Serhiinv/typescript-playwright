name: Ortoni Report Playwright

on:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Ortoni Report for Playwright
        run: npm install ortoni-report

      - name: Install Playwright browsers
        run: npx playwright install chromium --with-deps

      - name: Checkout gh-pages branch to get previous history
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages-temp
        continue-on-error: true

      - name: Restore previous history database if exists
        run: |
          if [ -f "gh-pages-temp/ortoni-report/ortoni-data-history.sqlite" ]; then
            echo "Restoring previous history database..."
            mkdir -p ortoni-report
            cp gh-pages-temp/ortoni-report/ortoni-data-history.sqlite ortoni-report/ortoni-data-history.sqlite
            echo "History database restored successfully"
            ls -la ortoni-report/
          else
            echo "No previous history database found - starting fresh"
          fi

      - name: Run Playwright tests with Ortoni Report
        run: npx playwright test --project=chromium --grep @smoke
        env:
          CI: true

      - name: Ensure history database is included
        if: always()
        run: |
          echo "Checking for history database..."
          find ortoni-report -name "*.sqlite" -type f | head -5
          ls -la ortoni-report/ || echo "No ortoni-report directory found"

      - name: Upload Ortoni Report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ortoni-report
          path: ortoni-report
          retention-days: 7

  deploy-report:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    environment:
      name: github-pages
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Download Ortoni Report artifact
        uses: actions/download-artifact@v4
        with:
          name: ortoni-report
          path: ortoni-report

      - name: Copy Ortoni report to branch
        run: |
          mkdir -p gh-pages/ortoni-report
          cp -r ortoni-report/* gh-pages/ortoni-report/
          # Rename ortoni-report.html to index.html for proper web serving
          if [ -f "gh-pages/ortoni-report/ortoni-report.html" ]; then
            cp gh-pages/ortoni-report/ortoni-report.html gh-pages/ortoni-report/index.html
          fi

      - name: Commit and push to gh-pages
        run: |
          cd gh-pages
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ortoni-report
          timestamp=$(date)
          git commit -m "Update Ortoni report: $timestamp" || echo "No changes to commit"
          git push origin gh-pages

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: gh-pages/ortoni-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
