name: Allure consolidated report
# Run on allure-consolidated-report branch only

on:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update Playwright to latest version
        run: npm install -D @playwright/test@latest playwright@latest allure-playwright

      - name: Install Playwright browsers
        run: npx playwright install chromium --with-deps

      - name: Install Allure commandline
        run: |
          curl -o allure-commandline.tgz -OL https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.25.0/allure-commandline-2.25.0.tgz
          tar -zxvf allure-commandline.tgz -C /tmp
          sudo mv /tmp/allure-2.25.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
          rm allure-commandline.tgz

      - name: Checkout gh-pages branch to get previous history
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages-temp
        continue-on-error: true

      - name: Run Playwright tests
        run: npx playwright test --project=chromium --grep @smoke
        env:
          CI: true

      - name: Create executor and environment info for Allure
        if: always()
        run: |
          echo "Creating executor.json for Allure history tracking..."
          cat > allure-results/executor.json << EOF
          {
            "name": "GitHub Actions",
            "type": "github",
            "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            "buildOrder": ${{ github.run_number }},
            "buildName": "Run #${{ github.run_number }}",
            "buildUrl": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            "reportName": "Allure Report",
            "reportUrl": "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-report/"
          }
          EOF
          
          echo "Creating environment.json for environment info..."
          cat > allure-results/environment.json << EOF
          {
            "Browser": "Chromium",
            "OS": "Ubuntu Latest",
            "Node.js": "20",
            "Framework": "Playwright",
            "Repository": "${{ github.repository }}",
            "Branch": "${{ github.ref_name }}",
            "Commit": "${{ github.sha }}"
          }
          EOF
          
          echo "Files created:"
          cat allure-results/executor.json
          cat allure-results/environment.json

      - name: Restore previous Allure history if exists
        if: always()
        run: |
          if [ -d "gh-pages-temp/allure-report/history" ]; then
            echo "Restoring previous Allure history..."
            mkdir -p allure-results/history
            cp -r gh-pages-temp/allure-report/history/* allure-results/history/
            echo "Allure history restored successfully"
            ls -la allure-results/history/ || echo "No history files found"
          else
            echo "No previous Allure history found - starting fresh"
          fi

      - name: Generate Allure Report with History
        if: always()
        run: |
          echo "Generating Allure report with history..."
          allure generate allure-results -o allure-report
          echo "Allure report generated successfully"
          ls -la allure-report/
          echo "Checking if history was generated:"
          ls -la allure-report/history/ || echo "No history directory found"

      - name: Upload Allure Report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
          retention-days: 7


  deploy-report:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    environment:
      name: github-pages
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Download Allure Report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Copy Allure report to branch
        run: |
          mkdir -p gh-pages/allure-report
          cp -r allure-report/* gh-pages/allure-report/

      - name: Commit and push to gh-pages
        run: |
          cd gh-pages
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add allure-report
          timestamp=$(date)
          git commit -m "Update Allure consolidated report: $timestamp" || echo "No changes to commit"
          git push origin gh-pages

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: gh-pages/allure-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Send email via SendGrid  # Add Send email notifications
        if: always()
        env:
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          RECIPIENTS: bv.user.as@gmail.com
          SENDER: serhii.nv@gmail.com
          REPORT_URL: https://serhiinv.github.io/typescript-playwright/ # or workflow run URL / artifact link
          WORKFLOW_RUNS: https://github.com/Serhiinv/typescript-playwright/actions/workflows/
        
        run: |
          SUBJECT="Allure Report - ${{ github.workflow }} - ${{ github.ref_name }} - Passed:${{ steps.summary.outputs.passed }} Failed:${{ steps.summary.outputs.failed }}"
          BODY="Test run summary:\nPassed: ${{ steps.summary.outputs.passed }}\nFailed: ${{ steps.summary.outputs.failed }}\nReport: $REPORT_URL\n\nSee Workflow runs for details: $WORKFLOW_RUNS"

          curl --request POST \
            --url https://api.sendgrid.com/v3/mail/send \
            --header "Authorization: Bearer $SENDGRID_API_KEY" \
            --header 'Content-Type: application/json' \
            --data '{
              "personalizations": [{
                "to": [{"email": "'"$RECIPIENTS"'"}],
                "subject": "'"$SUBJECT"'"
              }],
              "from": {"email": "'"$SENDER"'"},
              "content": [{
                "type": "text/plain",
                "value": "'"$BODY"'"
              }]
            }'